{"version":3,"sources":["api/api.js","components/pokemons/PokemonCard.js","components/pokemons/PokemonList.js","components/pokemons/stats/PokemonStats.js","components/pokemons/stats/PokemonTypes.js","components/pokemons/PokemonScreen.js","hooks/useFetch.js","components/search/SearchScreen.js","hooks/useForm.js","components/ui/NavBar.js","routers/AppRouter.js","PokedexApp.js","index.js"],"names":["searchPokemon","pokemon","a","url","fetch","response","json","data","getAllPokemons","getPokemonData","PokemonCard","name","id","types","sprites","color","electric","normal","fire","water","ice","rock","flying","grass","psychic","ghost","bug","poison","ground","dragon","steel","fighting","default","type","className","to","style","backgroundColor","onClick","src","other","dream_world","front_default","alt","PokemonList","useState","pokemons","setPokemons","loading","setLoading","fetchPokemons","promises","results","map","Promise","all","useEffect","poke","PokemonStats","stat","base_stat","PokemonTypes","PokemonScreen","history","typeColors","pokemonId","useParams","isMounted","useRef","error","state","setState","current","then","res","useFetch","console","log","filter","stats","length","push","goBack","SearchScreen","pokemonsData","setPokemonsData","notFound","setNotFound","searching","setSearching","location","useLocation","queryString","parse","search","q","initialState","e","target","value","useForm","formValues","handleInputChange","onSearch","result","handleSearch","preventDefault","onSubmit","placeholder","autoComplete","onChange","NavBar","activeClassName","exact","AppRouter","path","component","PokedexApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9454a21f.chunk.js","sourcesContent":["export const searchPokemon = async (pokemon) => {\r\n try {\r\n   let url = `https://pokeapi.co/api/v2/pokemon/${pokemon}`;\r\n   const response = await fetch(url);\r\n   const data = await response.json();\r\n   return data;\r\n } catch (err) {}\r\n};\r\n\r\nexport const getAllPokemons = async (url) => {\r\n try {\r\n   const response = await fetch(url);\r\n   const data = await response.json();\r\n   return data;\r\n } catch (err) {}\r\n};\r\n\r\nexport const getPokemonData = async (url) => {\r\n try {\r\n   const response = await fetch(url);\r\n   const data = await response.json();\r\n   return data;\r\n } catch (err) {}\r\n};","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst PokemonCard = ({ name, id, types,  sprites}) => {\r\n\r\n  const  typeColors  =  {\r\n    electric: '#FFEA70',\r\n    normal: '#B09398',\r\n    fire: '#FF675C',\r\n    water: '#0596C7',\r\n    ice: '#AFEAFD',\r\n    rock: '#999799',\r\n    flying: '#7AE7C7',\r\n    grass: '#4A9681',\r\n    psychic: '#FFC6D9',\r\n    ghost: '#561D25',\r\n    bug: '#A2FAA3',\r\n    poison: '#795663',\r\n    ground: '#D2B074',\r\n    dragon: '#DA627D',\r\n    steel: '#1D8A99',\r\n    fighting: '#2F2F2F',\r\n    default: '#2A1A1F',\r\n  } ;\r\n\r\n  const color = typeColors[types[0].type.name];\r\n\r\n  const handleClick = ()=>{\r\n\r\n    <Link className=\"card-btn\" to={`/pokemon/${id}`}>\r\n        \r\n    </Link>\r\n\r\n  }\r\n\r\n  \r\n\r\n  return (\r\n    <Link className=\"card-btn\" to={`/pokemon/${id}`}>\r\n    <div className=\"card\" style={{backgroundColor:color}} onClick={handleClick}>\r\n      <div className=\"card-img\">\r\n      <img\r\n        src={`${sprites.other.dream_world.front_default}`}\r\n        className=\"img\"\r\n        alt={name}\r\n      />\r\n      </div>\r\n      <div className=\"card-body\">\r\n        <p className=\"card-id\">\r\n        {`#${id}`}\r\n        </p>\r\n        <p className=\"card-name\">\r\n          {name}\r\n        </p>\r\n        {/* <Link className=\"card-btn\" to={`/pokemon/${id}`}>\r\n          more...\r\n        </Link> */}\r\n      </div>\r\n    </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default PokemonCard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { getAllPokemons, getPokemonData } from \"../../api/api\";\r\nimport PokemonCard from \"./PokemonCard\";\r\n\r\nconst PokemonList = () => {\r\n  const url = `https://pokeapi.co/api/v2/pokemon?limit=100`;\r\n\r\n  const [pokemons, setPokemons] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const fetchPokemons = async (url) => {\r\n    try {\r\n      setLoading(true);\r\n      const data = await getAllPokemons(url);\r\n      const promises = data.results.map(async (pokemon) => {\r\n        return await getPokemonData(pokemon.url);\r\n      });\r\n      const results = await Promise.all(promises);\r\n      setPokemons(results);\r\n      setLoading(false);\r\n    } catch (err) {}\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPokemons(url);\r\n  }, [url]);\r\n\r\n  return (\r\n    <div className=\"poke-list animate__animated animate__fadeInUp\">\r\n      {!loading ? (\r\n        pokemons.map((poke) => <PokemonCard key={poke.id} {...poke} />)\r\n      ) : (\r\n        <div className=\"loading-list animate__animated animate__fadeIn\">\r\n          <p>Cargando....</p>\r\n          <img\r\n            src=\"https://media.tenor.com/images/5dc76a3eae7ed0f4449463c898890293/tenor.gif\"\r\n            alt=\"\"\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokemonList;\r\n","import React from 'react';\r\n\r\nconst PokemonStats = ({stat}) => {\r\n\r\n // console.log(stat.stat.name);\r\n // console.log(stat.base_stat);\r\n\r\n return (\r\n  <div className=\"container-stat\">\r\n   <p className=\"screen-stat-name\">{stat.stat.name}</p>\r\n   <p>{stat.base_stat}</p>\r\n  </div>\r\n )\r\n}\r\n\r\nexport default PokemonStats\r\n","import React from 'react';\r\n\r\nconst PokemonTypes = ({type}) => {\r\n\r\n const  typeColors  =  {\r\n  electric: '#FFEA70',\r\n  normal: '#B09398',\r\n  fire: '#FF675C',\r\n  water: '#0596C7',\r\n  ice: '#AFEAFD',\r\n  rock: '#999799',\r\n  flying: '#7AE7C7',\r\n  grass: '#4A9681',\r\n  psychic: '#FFC6D9',\r\n  ghost: '#561D25',\r\n  bug: '#A2FAA3',\r\n  poison: '#795663',\r\n  ground: '#D2B074',\r\n  dragon: '#DA627D',\r\n  steel: '#1D8A99',\r\n  fighting: '#2F2F2F',\r\n  default: '#2A1A1F',\r\n} ;\r\n\r\n  // console.log(type.type.name);\r\n return (\r\n  <p style={{color:typeColors[type.type.name]}}>\r\n      {type.type.name}\r\n  </p>\r\n )\r\n}\r\n\r\nexport default PokemonTypes\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useFetch } from \"../../hooks/useFetch\";\r\nimport PokemonStats from \"./stats/PokemonStats\";\r\nimport PokemonTypes from \"./stats/PokemonTypes\";\r\n\r\nconst PokemonScreen = ({ history }) => {\r\n  const typeColors = {\r\n    electric: \"#FFEA70\",\r\n    normal: \"#B09398\",\r\n    fire: \"#FF675C\",\r\n    water: \"#0596C7\",\r\n    ice: \"#AFEAFD\",\r\n    rock: \"#999799\",\r\n    flying: \"#7AE7C7\",\r\n    grass: \"#4A9681\",\r\n    psychic: \"#FFC6D9\",\r\n    ghost: \"#561D25\",\r\n    bug: \"#A2FAA3\",\r\n    poison: \"#795663\",\r\n    ground: \"#D2B074\",\r\n    dragon: \"#DA627D\",\r\n    steel: \"#1D8A99\",\r\n    fighting: \"#2F2F2F\",\r\n    default: \"#2A1A1F\",\r\n  };\r\n\r\n  const { pokemonId } = useParams();\r\n\r\n  const url = `https://pokeapi.co/api/v2/pokemon/${pokemonId}`;\r\n\r\n  const { data, loading } = useFetch(url);\r\n\r\n  if (!loading) {\r\n    console.log(typeColors[data.types[0].type.name]);\r\n  }\r\n\r\n  const handleReturn = () => {\r\n    if (history.length <= 2) {\r\n      history.push(\"/\");\r\n    } else {\r\n      history.goBack();\r\n    }\r\n  };\r\n  // const colorShadow = typeColors[data.types.type.name]\r\n\r\n  // const color = `0 3px 15px rgba(${colorShadow}, ${colorShadow}, ${colorShadow}, 0.5)`;\r\n  // style={{boxShadow:color}}\r\n\r\n  return (\r\n    <div className=\"screen-card\">\r\n      {loading ? (\r\n        <div className=\"loading-screen animate__animated animate__fadeIn\">\r\n          <p> cargando...</p>\r\n          <img\r\n            src=\"https://media4.giphy.com/media/jQbinPsqqfg8GFxbQw/giphy.gif?cid=ecf05e47fieucjmpv05w46k2xcdcnyv6ldysxko32ezqj6k5&rid=giphy.gif&ct=s\"\r\n            alt=\"pokebola\"\r\n          />\r\n        </div>\r\n      ) : (\r\n        <div className=\"screen-container\">\r\n          <div className=\"screen-img\">\r\n            <img\r\n              src={`${data.sprites.other.dream_world.front_default}`}\r\n              style={{\r\n                filter: `drop-shadow(1px 1px 25px ${\r\n                  typeColors[data.types[0].type.name]\r\n                })`,\r\n              }}\r\n              alt={data.name}\r\n            />\r\n          </div>\r\n          <div className=\"screen-body\">\r\n            <div className=\"screen-id border\">\r\n              <p>{`#${data.id}`}</p>\r\n            </div>\r\n            <div className=\"screen-name border\">\r\n              <p>{data.name}</p>\r\n            </div>\r\n            <div className=\"screen-types border\">\r\n              {data.types.map((type) => (\r\n                <PokemonTypes key={type.type.name} type={type} />\r\n              ))}\r\n            </div>\r\n            <div className=\"screen-stats border\">\r\n              {data.stats.map((stat) => (\r\n                <PokemonStats key={stat.stat.name} stat={stat} />\r\n              ))}\r\n            </div>\r\n            <button className=\"screen-btn border\" onClick={handleReturn}>\r\n              {\" \"}\r\n              return{\" \"}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* <img src={`https://www.pkparaiso.com/imagenes/xy/sprites/animados/${name}.gif`} alt=\"asd\" /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokemonScreen;\r\n","import { useEffect, useRef, useState } from \"react\"\r\n\r\nexport const useFetch = (url) => {\r\n\r\n const isMounted = useRef(true);\r\n \r\n const [state, setState] = useState({data:null, loading:true, error:null});\r\n\r\n\r\n useEffect(() => {\r\n    \r\n    return () => {\r\n       isMounted.current=false;\r\n    };\r\n }, []);\r\n\r\n\r\n useEffect(() => {\r\n   setState({\r\n    data:null,\r\n    loading:true,\r\n    error:null,\r\n   })\r\n   fetch(url)\r\n    .then(res=>res.json())\r\n    .then(data=>{\r\n\r\n\r\n      if(isMounted.current){\r\n       setState({\r\n        loading:false,\r\n        error:null,\r\n        data,\r\n       })\r\n      }\r\n    })\r\n }, [url])\r\n  \r\n return state;\r\n \r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport queryString from \"query-string\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\nimport { searchPokemon } from \"../../api/api\";\r\nimport PokemonCard from \"../pokemons/PokemonCard\";\r\n\r\nconst SearchScreen = ({ history }) => {\r\n  const [pokemonsData, setPokemonsData] = useState([]);\r\n  const [notFound, setNotFound] = useState(false);\r\n  const [searching, setSearching] = useState(false);\r\n\r\n  const location = useLocation();\r\n  const { q = \"\" } = queryString.parse(location.search);\r\n\r\n  const initialForm = {\r\n    search: q,\r\n  };\r\n  const [formValues, handleInputChange] = useForm(initialForm);\r\n\r\n  const { search } = formValues;\r\n\r\n  const onSearch = async (pokemon) => {\r\n    if (!pokemon) {\r\n      setPokemonsData([]);\r\n      setSearching(false);\r\n      setNotFound(false);\r\n      return;\r\n    }\r\n    setNotFound(false);\r\n    setSearching(true);\r\n    const result = await searchPokemon(pokemon);\r\n    if (!result) {\r\n      setNotFound(true);\r\n      setSearching(false);\r\n      return;\r\n    } else {\r\n      setPokemonsData([result]);\r\n    }\r\n    setSearching(false);\r\n  };\r\n\r\n  if (search === 0) {\r\n    onSearch(null);\r\n  }\r\n\r\n  const handleSearch = async (e) => {\r\n    e.preventDefault();\r\n    history.push(`?q=${search}`);\r\n    onSearch(search);\r\n  };\r\n  console.log(pokemonsData);\r\n  return (\r\n    <div className=\"search-card\">\r\n      <div className=\"search-col1\">\r\n        <h4>Search your Pokemon</h4>\r\n        <form onSubmit={handleSearch}>\r\n          <input\r\n            type=\"text\"\r\n            name=\"search\"\r\n            placeholder=\"Find your pokemon\"\r\n            autoComplete=\"off\"\r\n            className=\"form-control\"\r\n            value={search}\r\n            onChange={handleInputChange}\r\n          />\r\n          <button\r\n            type=\"submit\"\r\n            className=\"search-btn\"\r\n            // onClick={handleSearch}\r\n          >\r\n            Search...\r\n          </button>\r\n        </form>\r\n      </div>\r\n      <div className=\"search-col2\">\r\n        {searching ? (\r\n          <div className=\"loading-search animate__animated animate__fadeIn\">\r\n            <p>buscando.....</p>\r\n            <img\r\n              src=\"https://media.tenor.com/images/e99275335170a0f5eb2a5cb38c7cc260/tenor.gif\"\r\n              alt=\"buscando\"\r\n            />\r\n          </div>\r\n        ) : notFound ? (\r\n          <div className=\"loading-not-found animate__animated animate__fadeIn\">\r\n            <p>pokemon no encontrado</p>\r\n            <img\r\n              src=\"https://media.tenor.com/images/b8134ffb1d8a1ede49c5806c2e2de868/tenor.gif\"\r\n              alt=\"no found\"\r\n            />\r\n          </div>\r\n        ) : pokemonsData.length === 0 ? (\r\n          <div className=\"loading-not-search animate__animated animate__fadeIn\">\r\n            <p>sin pokemones</p>\r\n            <img\r\n              src=\"https://media.tenor.com/images/131d9afc4ebdd550e4ad84e325018780/tenor.gif\"\r\n              alt=\"sin datos\"\r\n            />\r\n          </div>\r\n        ) : (\r\n          pokemonsData.map((poke) => <PokemonCard key={poke.id} {...poke} />)\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchScreen;\r\n","import { useState } from \"react\"\r\n\r\nexport const useForm = (initialState = {}) => {\r\n\r\n const [state, setState] = useState(initialState);\r\n\r\n\r\n const reset = ()=>{\r\n\r\n  setState(initialState);\r\n\r\n }\r\n\r\n const handleChange = (e)=>{\r\n  setState({\r\n   ...state,\r\n    [e.target.name]:e.target.value,\r\n  })\r\n };\r\n\r\n return [state,handleChange, reset];\r\n}\r\n","import React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\n\r\nconst NavBar = () => {\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <div className=\"container-logo\">\r\n        <Link className=\"nav-logo\" to=\"/\">\r\n          <img src=\"https://raw.githubusercontent.com/PokeAPI/media/master/logo/pokeapi_256.png\" alt=\"logo\" />\r\n        </Link>\r\n        </div>\r\n        <div className=\"container-search\">\r\n        <NavLink\r\n          activeClassName=\"active\"\r\n          className=\"nav-search\"\r\n          exact\r\n          to=\"/search\"\r\n        >\r\n          Search\r\n        </NavLink>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\r\nimport PokemonList from \"../components/pokemons/PokemonList\";\r\nimport PokemonScreen from \"../components/pokemons/PokemonScreen\";\r\nimport SearchScreen from \"../components/search/SearchScreen\";\r\nimport NavBar from \"../components/ui/NavBar\";\r\n\r\nconst AppRouter = () => {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <NavBar />\r\n        <Switch>\r\n          <Route exact path=\"/search\" component={SearchScreen} />\r\n          <Route exact path=\"/pokemon/:pokemonId\" component={PokemonScreen} />\r\n          <Route path=\"/\" component={PokemonList} />\r\n\r\n          <Redirect to=\"/\" />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React from 'react';\r\nimport AppRouter from './routers/AppRouter';\r\n\r\nconst PokedexApp = () => {\r\n return (\r\n  <div className=\"container\">\r\n  <AppRouter />\r\n  </div>\r\n )\r\n}\r\n\r\nexport default PokedexApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PokedexApp from './PokedexApp';\nimport \"./styles/styles.css\"\n\nReactDOM.render(\n    <PokedexApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}